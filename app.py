import streamlit as st
from parser.parser import parse_data_from_fedresurs
from agent.agent import agent_executor
import time
import json
import pandas as pd

def load_data(data_file):
    try:
        with open(data_file, "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        return []

def visualize_data(data):
    df = pd.DataFrame(data)

    df = df.rename(columns={
        "text": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ",
        "date": "–î–∞—Ç–∞ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞"
    })

    if df.empty:
        st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    else:
        st.dataframe(df)


DATA_FILE = "data/contracts.json"

st.set_page_config(page_title="–õ–∏–∑–∏–Ω–≥–æ–≤—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã", layout="wide")
st.title("–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª–∏–∑–∏–Ω–≥–æ–≤—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤")

col1, col2 = st.columns(2)
with col1:
    start_date = st.date_input("–ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞", value=None)
with col2:
    end_date = st.date_input("–ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞", value=None)

run_button = st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É")

if run_button and start_date and end_date:
    st.info("–°–æ–±–∏—Ä–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...")

    # Clear previous results
    with open("data/contracts.json", "w", encoding="utf-8") as f:
        json.dump([], f, ensure_ascii=False, indent=2)

    dirty_data = parse_data_from_fedresurs(str(start_date), str(end_date))

    results = []
    progress_bar = st.progress(0)

    for idx, dirty_text in enumerate(dirty_data):
        system_prompt = (
            f"–í–æ—Ç –Ω–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ª–∏–∑–∏–Ω–≥–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞:\n{dirty_text}\n\n"
            "–¢–≤–æ—è –∑–∞–¥–∞—á–∞:\n"
            "1. –ò–∑–≤–ª–µ–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–¥–µ–ª–∫–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏, –ø—Ä–µ–¥–º–µ—Ç –ª–∏–∑–∏–Ω–≥–∞ –∏ –¥–∞—Ç—É –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞. "
            "–û—Ñ–æ—Ä–º–∏ —ç—Ç–æ –≤ –æ–¥–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.\n"
            "2. –û–ø—Ä–µ–¥–µ–ª–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–µ–¥–º–µ—Ç –ª–∏–∑–∏–Ω–≥–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π. "
            "–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ ‚Äî –≤–µ—Ä–Ω–∏ '400' –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Å—å.\n"
            "3. –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–¥–µ–ª–∫–µ –≤ JSON-—Ñ–∞–π–ª. "
            "–ó–∞–ø–∏—Å–∞—Ç—å –Ω—É–∂–Ω–æ: –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–¥–µ–ª–∫–µ –∏ –æ—Ç–¥–µ–ª—å–Ω–æ –¥–∞—Ç—É.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–±–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ. –ù–µ –¥–µ–ª–∞–π —à–∞–≥–∏ —Å–∞–º, –≤—ã–∑—ã–≤–∞–π –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.\n"
            "–ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Ç–µ–∫—Å—Ç–µ –ª–∏–∑–∏–Ω–≥–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞."
        )

        result = agent_executor.run(system_prompt)
        results.append(result)

        progress_bar.progress((idx + 1) / len(dirty_data))
        time.sleep(1)

    st.success("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚úÖ")

    st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")

    data = load_data(DATA_FILE)
    visualize_data(data)

    # Optional: Downloadable JSON
    with open(DATA_FILE, "r", encoding="utf-8") as f:
        data = f.read()

    st.download_button("üì• –°–∫–∞—á–∞—Ç—å JSON", data, file_name="contracts.json", mime="application/json")
